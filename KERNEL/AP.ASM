CODE SEGMENT
	START PROC
	CLI
	DB 0EAH
	DW OFFSET BOOTAP; IP
	DW 00H;           CS
	ALIGN 08H
	GDT:
	DQ 0000000000000000H
	DQ 00209A0000000000H
	DQ 0000920000000000H
	BOOTAP:
	; Init segments
	MOV AX, CS
	MOV DS, AX
	MOV ES, AX
	MOV SS, AX
	MOV SP, 1000H

	; Setup LONGMODE offset
	DB 66H
	XOR AX, AX
	MOV AX, CS
	MOV CL, 04H
	DB 66H
	SHL AX, CL
	MOV SI, OFFSET JMPENTRY
	DB 66H
	ADD [SI], AX

	; Open A20
	IN AL, 92H
	OR AL, 02H
	OUT 92H, AL

	; Setup GDTR
	DB 66H
	XOR AX, AX
	DB 66H
	PUSH AX; GDT physical address high 32 bit
	; GDT physical address low 32 bit
	MOV AX, CS
	MOV CL, 0CH
	SHR AX, CL
	PUSH AX
	MOV AX, CS
	MOV CL, 04H
	SHL AX, CL
	MOV CX, OFFSET GDT
	ADD AX, CX
	PUSH AX
	MOV AX, 0017H
	PUSH AX
	MOV SI, SP
	DB 3EH, 0FH, 01H, 14H; LGDT [DS:SI]
	ADD SP, 0AH

	;Setup CR3
	DB 66H
	MOV AX, 0000H
	DW 0010H
	;MOV CR3, EAX
	DB 66H, 0FH, 22H, 18H

	;5. Enable PAE and PGE
	;MOV EAX, CR4
	DB 66H, 0FH, 20H, 20H
	DB 66H
	OR AX, 20H; CR4.PAE
	DB 66H
	OR AX, 0080H; CR4.PGE
	DW 00H
	;MOV CR4, EAX
	DB 66H, 0FH, 22H, 20H

	;6. Set EFER.LME to 1 (ENABLE Long Mode)
	DB 66H
	MOV CX, 0080H
	DW 0C000H
	;RDMSR     ;EFER
	DB 0FH, 32H
	DB 66H
	OR AX, 100H ;EFER.LME
	DW 00H
	;WRMSR
	DB 0FH, 30H

	;7. Enable CR0.PE and CR0.PG
	;MOV EAX, CR0
	DB 66H, 0FH, 20H, 00H
	;BIT  0 is CR0.PE
	;BIT 31 is CR0.PG
	;MOV ECX, 80000001H
	DB 66H
	MOV CX, 0001H
	DW 8000H
	DB 66H
	OR AX, CX
	;MOV CR0, EAX
	DB 66H, 0FH, 22H, 00H

	;8. JMP FAR 0008:LONGMODE
	DB 66H, 0EAH
	JMPENTRY:
	DW OFFSET LONGMODE
	DW 0000H
	DW 0008H

	;- - - - - - - - - - - - - - - - - - - - - - - - - - -

	SELFSPIN:
	JMP SELFSPIN
	START ENDP

	LONGMODE PROC
	SELFSPIN:
	JMP SELFSPIN
	LONGMODE ENDP

CODE ENDS
END START